name: Python executables

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-upload:
    name: build and upload
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest] # ${{ matrix.OS_NAME }}
        include:

          - os: ubuntu-latest
            OS_NAME: ubuntu
            PYTHON_VERSION: 3.8
            EXTENSION:
            RESOURCES: resources:resources

          - os: windows-latest
            OS_NAME: windows
            PYTHON_VERSION: 3.8
            EXTENSION: .exe
            RESOURCES: resources;resources

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{matrix.PYTHON_VERSION}}

      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller==6.10

      - name: Build with pyinstaller
        shell: bash
        run: |
          pyinstaller --name=CSIDRS-${{ matrix.OS_NAME }}${{matrix.EXTENSION}} --onefile --hidden-import='pkg_resources.py2_warn' --add-data '${{ matrix.RESOURCES }}' --icon=./resources/icon.ico src/main.py

      - name: Upload artifact
        id: upload-artifact
        uses: actions/upload-artifact@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: ./dist/CSIDRS-${{ matrix.OS_NAME }}${{matrix.EXTENSION}}
          name: CSIDRS-${{ matrix.OS_NAME }}

  create-release:
    name: createrelease
    needs: [build-and-upload]
    runs-on: [ubuntu-latest]
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: create release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: CSIDRS ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: add version to name
        run: |
          ls
          pwd
          mv CSIDRS-windows.exe CSIDRS-${{ github.ref_name }}-windows.exe
          mv CSIDRS-ubuntu CSIDRS-${{ github.ref_name }}-ubuntu

      - name: upload assets
        uses: softprops/action-gh-release@v2
        with:
          fail_on_unmatched_files: true
          files: |
            ./CSIDRS-${{ github.ref_name }}-windows.exe
            ./CSIDRS-${{ github.ref_name }}-ubuntu
